<?xml version="1.0"?>
<project name="telscale.restcomm.release" default="release" basedir=".">
	<property environment="sys"/>
    <property name="release.dir" location="${ant.file.telscale.restcomm.release}/../target" />
	<property name="base.dir" location="${ant.file.telscale.restcomm.release}/.." />
	<property name="docs.dir" location="${release.dir}/docs" />
	<property name="bundle.docs.dir" location="${base.dir}/docs-bundle" />
	<property name="checkout.dir" value="${base.dir}/checkout" />	
	<property name="checkout.telscale-restcomm.dir" value="${checkout.dir}/telscale-restcomm" />
	<property name="telscale.restcomm.dir" value="${base.dir}/restcomm" />
	<property name="telscale.restcomm.release.version" value="6.1.1.GA"/>
	
	<!--Telscale binaries versions-->
	<property name="telscale-sipservlets.version" value="6.1.2.GA" />
	<property name="telscale-media.version" value="6.1.1.GA" />
	<property name="telscale-lb.version" value="6.1.2.GA" />
	<property name="telscale-diameter.version" value="6.1.2.GA" />
	<property name="telscale.restcomm.release.tag" value="restcomm-1.0.0.CR1"/>
	
	
	<!--GET Telscale-Sip=Servlets & Telscale-Media-Server & Telscale Diameter - properties-->
	<property name="telscale-sipservlets.distro.version" value="${telscale-sipservlets.version}-jboss-5.1.0.GA-1209171320" />
	<property name="telscale-sipservlets.download.distro.file" value="TelScale-SIP-Servlets-${telscale-sipservlets.distro.version}.zip" />
	<property name="telscale-sipservlets.download.url" value="ftp://ftp.box.com/TelScale%20SIP%20Servlets/6.1.2.GA/${telscale-sipservlets.download.distro.file}" />
	<property name="telscale-sipservlets.distro.zip.path" value="${checkout.dir}/${telscale-sipservlets.download.distro.file}" />
	
	<!-- TODO: Once productized Media Telscale version available then exchange download link here and version above-->
	<property name="telscale-media.download.distro.file" value="TelScale-media-${telscale-media.version}.zip" />
	<property name="telscale-media.download.url" value="ftp://ftp.box.com/TelScale%20media/${telscale-media.version}/${telscale-media.download.distro.file}" />
	<property name="telscale-media.distro.zip.path" value="${checkout.dir}/${telscale-media.download.distro.file}" />
	
	<property name="telscale-diameter.download.distro.file" value="TelScale-diameter-${telscale-diameter.version}.zip" />
	<property name="telscale-diameter.download.url" value="ftp://ftp.box.com/TelScale%20jDiameter/${telscale-diameter.version}/${telscale-diameter.download.distro.file}" />
	<property name="telscale-diameter.distro.zip.path" value="${checkout.dir}/${telscale-diameter.download.distro.file}" />

	<property name="release.build.goals" value="clean install"/>
	<property name="release.ts.deploy.goals" value="clean deploy"/>
	
	

	<condition property="mvn.executable" value="${sys.M2_HOME}\bin\mvn.bat" else="mvn">
		<os family="windows"/>
	</condition>
	
	<taskdef onerror="fail" resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="${ant.file.mobicents.restcomm.release}/../ant-contrib-1.0b3.jar" />
		</classpath>
	</taskdef>
	
	<target name="release" depends="clean,get-deps,extract-deps,checkout-restcomm" />
	<!--target name="release" depends="clean,get-deps,extract-deps,get-map,clean-up-telscale-slee, build-restcomm,copy-restcomm, build-docs, copy-docs, make-final-zip,bundle-documentation" /-->
	<!--target name="release-no-clean" depends="get-deps,extract-deps,get-map,clean-up-telscale-slee, build-restcomm,copy-restcomm, build-docs, copy-docs, make-final-zip,bundle-documentation" /-->
	
    <target name="deploy">
    	<ant antfile="${ant.file.telscale.restcomm.release}" target="release">
    		<property name="release.build.goals" value="${release.ts.deploy.goals}" />
    	</ant>
    </target>
	
    <target name="deploy-no-clean">
    	<ant antfile="${ant.file.telscale.restcomm.release}" target="release-no-clean">
    		<property name="release.build.goals" value="${release.ts.deploy.goals}" />
    	</ant>
    </target>
	
	<!--GET Telscale-Sip=Servlets & Telscale-Media-Server & Telscale Diameter - downloads-->
	
	<target name="get-deps" depends="get-telscale-sipservlets,get-telscale-media,get-telscale-diameter" />
	<target name="extract-deps" depends="extract-telscale-sipservlets,extract-telscale-media,extract-telscale-diameter" />
	
	<!--SipServlets-->
	<available file="${telscale-sipservlets.distro.zip.path}" property="got.telscale-sipservlets" />
	<target name="get-telscale-sipservlets" unless="got.telscale-sipservlets">
		<echo>Downloading Telscale SipServlets version: ${telscale-sipservlets.version}</echo>
		<exec failonerror="true" executable="wget">
		    <arg value="--user=telscale-file-server@telestax.com" />
		    <arg value="--password=t31sca13fi13s" />
		    <arg value="${telscale-sipservlets.download.url}" />
		</exec>
		<move file="${base.dir}/${telscale-sipservlets.download.distro.file}" todir="${checkout.dir}"/>
	</target>

	<target name="extract-telscale-sipservlets" depends="get-telscale-sipservlets">
		<delete dir="${checkout.telscale-sipservlets.dir}" failonerror="false" />
		<unzip src="${telscale-sipservlets.distro.zip.path}" dest="${release.dir}">
			<mapper type="glob" from="TelScale-SIP-Servlets-${telscale-sipservlets.version}-jboss-5.1.0.GA/*" to="*"/>
		</unzip>
		<!--delete dir="${checkout.telscale-sipservlets.dir}/jboss-5.1.0.GA/server/all" includeemptydirs="true" failonerror="false" verbose="false"/-->
	</target>
	
	<!--Media-->
	<available file="${telscale-media.distro.zip.path}" property="got.telscale-media" />
	<target name="get-telscale-media" unless="got.telscale-media">
		<echo>Downloading Telscale Slee version: ${telscale-media.version}</echo>
		<exec failonerror="true" executable="wget">
		    <arg value="--user=telscale-file-server@telestax.com" />
		    <arg value="--password=t31sca13fi13s" />
		    <arg value="${telscale-media.download.url}" />
		</exec>
		<move file="${base.dir}/${telscale-media.download.distro.file}" todir="${checkout.dir}"/>
	</target>

	<target name="extract-telscale-media" depends="get-telscale-media">
		<delete dir="${checkout.telscale-media.dir}" failonerror="false" />
		<unzip src="${telscale-media.distro.zip.path}" dest="${release.dir}/media"/>
	</target>
	
	<!--diameter-->
	<available file="${telscale-diameter.distro.zip.path}" property="got.telscale-diameter" />
	<target name="get-telscale-diameter" unless="got.telscale-diameter">
		<echo>Downloading Telscale Slee version: ${telscale-diameter.version}</echo>
		<exec failonerror="true" executable="wget">
		    <arg value="--user=telscale-file-server@telestax.com" />
		    <arg value="--password=t31sca13fi13s" />
		    <arg value="${telscale-diameter.download.url}" />
		</exec>
		<move file="${base.dir}/${telscale-diameter.download.distro.file}" todir="${checkout.dir}"/>
	</target>

	<target name="extract-telscale-diameter" depends="get-telscale-diameter">
		<delete dir="${checkout.telscale-diameter.dir}" failonerror="false" />
		<unzip src="${telscale-diameter.distro.zip.path}" dest="${release.dir}/diameter"/>
	</target>
	
	
    <target name="checkout-restcomm">
        <echo>Checking out restcomm</echo>
        <exec failonerror="true" executable="git">
            <arg value="clone" />
            <arg value="-b" />
            <arg value="ts1" />
            <arg value="https://telscalejenkins:m0b1c3nts@bitbucket.org/telestax/telscale-restcomm.git" />
            <arg value="${checkout.telscale-restcomm.dir}" />
        </exec>
    </target>
	
	<target name="build-ss7-map">
        <echo>Building Map resource</echo>
		<!--use Telscale-6.1.3.GA pom.xml -->
		<replace dir="${checkout.map.dir}/resources/map" value="6.1.3.GA-TelScale">
		  <include name="**/pom.xml"/>
		  <replacetoken><![CDATA[2.0.0.BETA3]]></replacetoken>
		</replace>		
        <copy file="${base.dir}/map-ra/pom.xml" tofile="${checkout.map.dir}/resources/map/pom.xml" failonerror="true" overwrite="true"/>
        <exec failonerror="true" executable="${mvn.executable}" dir="${checkout.map.dir}">
                <arg line="clean install -Prelease -Drelease.dir=${release.map.dir} -Dmaven.test.skip=true" />
        </exec>
	</target>

	
	<target name="clean-up-telscale-slee">
		<mkdir dir="${release.dir}/jboss-5.1.0.GA/server/simulator"/>
        <copy todir="${release.dir}/jboss-5.1.0.GA/server/simulator" failonerror="true">
                <fileset dir="${release.dir}/jboss-5.1.0.GA/server/default">
                        <include name="**" />
                </fileset>
        </copy>
		<delete dir="${release.dir}/jboss-5.1.0.GA/server/all" includeemptydirs="true" failonerror="true"/>    	
		<delete includeemptydirs="true" failonerror="true">
            <fileset dir="${release.dir}/docs/resources">
                    <include name="**" />
                	<exclude name="**/map/*" />
            </fileset>
		</delete>	
		<delete dir="${release.dir}/docs/enablers" includeemptydirs="true" failonerror="true" />
		<delete dir="${release.dir}/docs/examples" includeemptydirs="true" failonerror="true" />
		<delete includeemptydirs="true" failonerror="true">
            <fileset dir="${release.dir}/resources">
                    <include name="**" />
                	<exclude name="**/jdbc/*" />
	            	<exclude name="**/http-client/*" />
 	           		<exclude name="**/http-servlet/*" />
            </fileset>
		</delete>	
		<delete failonerror="true">
            <fileset dir="${release.dir}/jboss-5.1.0.GA/server/simulator/lib">
                    <include name="**" />
            </fileset>
		</delete>	
		<delete dir="${release.dir}/extra" includeemptydirs="true" failonerror="true" />
		<delete dir="${release.dir}/enablers" includeemptydirs="true" failonerror="true" />
		<delete dir="${release.dir}/examples" includeemptydirs="true" failonerror="true" />
		<delete file="${release.dir}/readme.txt" failonerror="true" />
		<delete file="${release.dir}/sources.zip" failonerror="true" />
		<delete dir="${release.dir}/jboss-5.1.0.GA/server/simulator/deploy/cluster" includeemptydirs="true" failonerror="true" />
		<delete dir="${release.dir}/jboss-5.1.0.GA/server/simulator/deploy/deploy.last" includeemptydirs="true" failonerror="true" />
		<delete dir="${release.dir}/jboss-5.1.0.GA/server/simulator/deploy/snmp-adaptor.sar" includeemptydirs="true" failonerror="true" />
		<delete dir="${release.dir}/jboss-5.1.0.GA/server/simulator/deploy/juddi-service.sar" includeemptydirs="true" failonerror="true" />
		<delete file="${release.dir}/jboss-5.1.0.GA/server/simulator/deploy/mobicents-slee/profiles-external-ds.xml" failonerror="true" />
		<delete file="${release.dir}/jboss-5.1.0.GA/server/simulator/deploy/mobicents-slee/META-INF/jboss-cache-config.xml" failonerror="true" />
		<delete file="${release.dir}/jboss-5.1.0.GA/server/simulator/iiop-service.xml" failonerror="true" />
		<delete file="${release.dir}/jboss-5.1.0.GA/server/simulator/conf/jacorb.properties" failonerror="true" />
		<delete file="${release.dir}/jboss-5.1.0.GA/server/simulator/deploy/iiop-service.xml" failonerror="true" />
		<delete dir="${release.dir}/jboss-5.1.0.GA/server/simulator/deploy-hasingleton/" includeemptydirs="true" failonerror="true" />
		<delete dir="${release.dir}/jboss-5.1.0.GA/server/simulator/farm/" includeemptydirs="true" failonerror="true" />
	</target>
	
    <target name="build-restcomm">
        <exec failonerror="true" executable="${mvn.executable}" dir="${base.dir}/../">
                <arg line="${release.build.goals} -Dmaven.test.skip=true" />
        </exec>
    </target>
	
    <target name="copy-restcomm">
        <echo>Copy restcomm </echo>
		<!--default-->
        <copy todir="${release.dir}/jboss-5.1.0.GA/server/default/deploy/telscale-restcomm" failonerror="true">
                <fileset dir="${telscale.restcomm.dir}/core/bootstrap/target/telscale-restcomm">
                        <include name="**" />
                </fileset>
        </copy>
		<!--all-->
        <copy todir="${release.dir}/jboss-5.1.0.GA/server/simulator/deploy/telscale-restcomm-gateway" failonerror="true">
                <fileset dir="${telscale.restcomm.dir}/core/bootstrap/target/telscale-restcomm-gateway">
                        <include name="**" />
                </fileset>
        </copy>
    </target>
	
    <target name="build-docs">
        <exec failonerror="true" executable="${mvn.executable}" dir="${base.dir}/../docs">
                <arg line="${release.build.goals} -Dmaven.test.skip=true" />
        </exec>
    </target>
	
    <target name="copy-docs">
		<!--docs-->
	    <mkdir dir="${bundle.docs.dir}"/>
		<delete dir="${docs.dir}/resources/map"/>    	
		<copy todir="${docs.dir}/resources/map" failonerror="true" flatten="true">
		        <fileset dir="${release.map.dir}/docs/">
		                <include name="**/*User_Guide.pdf" />
		        </fileset>
		</copy>
    		
		<move toDir="${bundle.docs.dir}/slee" overwrite="true">
			<fileset dir="${docs.dir}">
                <include name="**" />
			</fileset>
		</move>
		<copy toDir="${docs.dir}/slee" overwrite="true" flatten="true">
			<fileset dir="${bundle.docs.dir}/slee">
                <include name="**/*.pdf" />
			</fileset>
		</copy>
    	
		<mkdir dir="${docs.dir}/jss7"/>
		<mkdir dir="${docs.dir}/ussd"/>
		<copy todir="${docs.dir}/jss7" failonerror="true">
		        <fileset dir="${checkout.telscale-jss7.dir}/TelScale-jss7-6.1.3.GA/_docs/">
		                <include name="*User_Guide.pdf" />
		        </fileset>
		</copy>
		<copy todir="${docs.dir}/ussd" failonerror="true" flatten="true">
		        <fileset dir="${telscale.ussd.dir}/docs/">
		                <include name="**/*.pdf" />
		        </fileset>
		</copy>
    </target>
	
	
	<target name="make-final-zip" depends="set-time-stamp">
		<zip destfile="${base.dir}/TelScale-ussd-${telscale.ussd.release.version}-${time.stamp}.zip" filesonly="false">
			<zipfileset dir="${release.dir}" prefix="TelScale-ussd-${telscale.ussd.release.version}">
				<include name="**" />
			</zipfileset>
		</zip>
	</target>
	
	<target name="set-time-stamp" unless="skip.timestamp">
		<tstamp>
			<format property="time.stamp" pattern="yyMMddHHmm" />
		</tstamp>
	</target>
	
    <target name="bundle-documentation" >
	    <echo>bundling documentation</echo>
    	
		<delete dir="${bundle.docs.dir}/slee/resources/map"/>    	
		<copy todir="${bundle.docs.dir}/slee/resources/map" failonerror="true">
		        <fileset dir="${release.map.dir}/docs/">
		                <include name="**" />
		        </fileset>
		</copy>

		<delete dir="${bundle.docs.dir}/slee/tools/slee-management-console"/>    	
		<mkdir dir="${bundle.docs.dir}/jss7"/>
		<mkdir dir="${bundle.docs.dir}/ussd"/>
		<copy todir="${bundle.docs.dir}/jss7" failonerror="true">
		        <fileset dir="${checkout.telscale-jss7.dir}/TelScale-jss7-6.1.3.GA/_docs/">
		                <include name="**" />
		        </fileset>
		</copy>
		<copy todir="${bundle.docs.dir}/ussd/adminguide" failonerror="true">
		        <fileset dir="${telscale.ussd.dir}/docs/adminguide/jdocbook-telscale/target/docbook/publish/">
		        	<include name="**"/>
		        </fileset>
		</copy>
		<copy todir="${bundle.docs.dir}/ussd/installationguide" failonerror="true">
		        <fileset dir="${telscale.ussd.dir}/docs/installationguide/jdocbook-telscale/target/docbook/publish/">
		        	<include name="**"/>
		        </fileset>
		</copy>
		<copy todir="${bundle.docs.dir}/ussd/releasenotes" failonerror="true">
		        <fileset dir="${telscale.ussd.dir}/docs/releasenotes/jdocbook-telscale/target/docbook/publish/">
		        	<include name="**"/>
		        </fileset>
		</copy>
    	
        <zip destfile="${base.dir}/TelScale-ussd-${telscale.ussd.release.version}-docs-${time.stamp}.zip" filesonly="false">
                <zipfileset dir="${bundle.docs.dir}" prefix="TelScale-ussd-${telscale.ussd.release.version}/docs">
                        <include name="**/*" />
                </zipfileset>
        </zip>
    </target>
	
	
	<target name="clean">
	    <delete dir="${release.dir}"/>
	    <!--delete dir="${base.dir}/checkout"/-->
	</target>
	
</project>
